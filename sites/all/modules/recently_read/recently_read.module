<?php

/**
 * @file
 * Recently read module file.
 * Displays a history of recently read nodes by currently logged in user.
 */


/**
 * Implements hook_menu().
 */
function recently_read_menu() {
  $items['admin/config/system/recently-read'] = array(
    'title' => 'Recently read content',
    'description' => 'Tracks the history of recently read content by each user.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('recently_read_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements of hook_views_api().
 */
function recently_read_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module','recently_read') . '/includes',
  );
}

/**
 * Implements hook_entity_view().
 */
function recently_read_entity_view($entity, $type, $view_mode, $langcode) {
  $info = entity_get_info();
  /*
  dsm($info);
  dsm($type);
  dsm($entity);
  dsm($entity->{$info[$type]['entity keys']['id']});
   */
  if ($view_mode == 'full') {
    $status = db_merge('recently_read')
      ->key(array('sid' => session_api_get_sid(),'entity_id' => $entity->{$info[$type]['entity keys']['id']},'type' => $type))
      ->fields(array(
        'type' => $type,
        'language' => $langcode,
        'timestamp' => REQUEST_TIME,
      ))
      ->execute();
  }
}


/**
 * Form builder; Configure recently read settings.
 */
function recently_read_settings($form, &$form_state) {
  $types = node_type_get_types();

  $options = array();
  foreach ($types as $key => $type) {
    $options[$key] = $type->name;
  }

  $form['node_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Enable history tracking of the following content'),
    '#description' => t('Select which content types will be tracked.'),
    '#default_value' => variable_get('recently_read_node_types', array('page', 'article')),
    '#options' => $options,
  );

  $form['anonymous_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable history tracking also for anonymous users'),
    '#description' => t('If disabled, login is required to view recently read block.'),
    '#default_value' => variable_get('recently_read_anonymous_enabled', FALSE),
  );

  $form['max_entries'] = array(
    '#type' => 'textfield',
    '#title' => t('Recently read list length'),
    '#description' => 'Provide the maximum number of entires stored for each read content type (per user) in the database.',
    '#default_value' => variable_get('recently_read_max_entries', 10),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
  );

  return $form;
}


function recently_read_settings_validate($form, &$form_state) {
  $max = $form_state['values']['max_entries'];
  if (!is_numeric($max) || $max < 1) {
    form_set_error('max_entries', t('%field must be a positive integer value.',
            array('%field' => $form['max_entries']['#title'])
    ));
  }
}


function recently_read_settings_submit($form, &$form_state) {
  $selected = array();
  foreach ($form_state['values']['node_types'] as $value) {
    if ($value) {
      $selected[] = $value;
    }
  }
  variable_set('recently_read_node_types', $selected);
  variable_set('recently_read_max_entries', $form_state['values']['max_entries']);
  variable_set('recently_read_anonymous_enabled', $form_state['values']['anonymous_enabled']);
  drupal_set_message(t('The configuration options have been saved.'));
}

